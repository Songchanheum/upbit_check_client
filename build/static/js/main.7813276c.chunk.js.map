{"version":3,"sources":["logo.svg","Check.js","App.js","reportWebVitals.js","index.js"],"names":["selList","Check","props","orderUrl","accountUrl","interval","useState","check","sel","publicKey","secretKey","mmFlag","findCode","condition","rate","state","setState","Set","checkedItems","setCheckedItems","checkedItemHandler","id","isChecked","add","has","delete","rows","list","useMemo","map","item","Number","per","console","log","code","orderChance","includes","row","find","element","classNameCheck","indexOf","undefined","rowPrice","price","curPay","highPrice","rowIndex","d","splice","flag","className","type","checked","onChange","e","target","checkHandler","colSpan","prePay","getList","a","payload","access_key","nonce","uuidv4","token","sign","axios","get","headers","then","result","relist","data","currency","con","push","avg_buy_price","catch","err","alert","response","error","message","selCoin","balance","body","market","side","volume","ord_type","identifier","JSON","stringify","query","queryEncode","hash","crypto","createHash","queryHash","update","digest","query_hash","query_hash_alg","post","json","comp","bid_account","ask_account","orderCoin","pr","parseInt","split","disabled","style","width","value","plcaeHolder","onClick","clearInterval","setInterval","colspan","placeHolder","appUrl","preDisId","curDisId","disInfo","inteval","checkInteval","App","gonsi","gongsiState","checkState","getCode","getCheck","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7813276c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.9526fd05.svg\";","import React, {useState, useMemo} from 'react';\r\nimport crypto from 'crypto';\r\nimport sign from 'jsonwebtoken/sign';\r\nimport queryEncode from \"querystring/encode\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport axios from 'axios';\r\nimport './App.css';\r\n\r\nlet selList = [];\r\nlet checkList = [];\r\nconst Check = (props) => {\r\n\r\n    const orderUrl = \"https://api.upbit.com/v1/orders\";\r\n    const accountUrl = \"https://api.upbit.com/v1/accounts\";\r\n    let interval = null;\r\n    const [state, setState] = useState({\r\n      check : '매수 : ',\r\n      sel : '매도 : ',\r\n      publicKey : '',\r\n      secretKey : '',\r\n      mmFlag: false,\r\n      findCode: '',\r\n      condition: 2,\r\n      rate: 0.5\r\n    });\r\n    const [checkedItems, setCheckedItems] = useState(new Set());\r\n    const checkedItemHandler = (id, isChecked) => {\r\n    if (isChecked) {\r\n      checkedItems.add(id);\r\n      setCheckedItems(checkedItems);\r\n    } else if (!isChecked && checkedItems.has(id)) {\r\n      checkedItems.delete(id);\r\n      setCheckedItems(checkedItems);\r\n    }\r\n  };\r\n    const getDate = () => {\r\n      let today = new Date();\r\n\r\n      let date = today.getDate();  // 날짜\r\n      let time = today.getTime();\r\n\r\n      return date + \" \" + time;\r\n    }\r\n    const checkList = props.list;\r\n\r\n    const rows = useMemo(() => {\r\n     return props.list.map(item => {\r\n       if(Number(item.per) > state.condition){\r\n         console.log(checkedItems.has(item.code));\r\n         if(state.mmFlag && checkedItems.has(item.code)){\r\n           orderChance(0, item.code);\r\n         }\r\n       }\r\n       if(state.findCode == '' || item.code.includes(state.findCode)){\r\n         const row = selList.find(function(element){\r\n            return item.code.includes(element.code)\r\n         })\r\n         let classNameCheck = 'divTableCell cell_1';\r\n         if(item.per.indexOf('-') > -1){\r\n           classNameCheck += ' blue';\r\n         }else{\r\n           classNameCheck += ' red';\r\n         }\r\n         if(row !== undefined){\r\n           const rowPrice = row.price;\r\n           const curPay = item.curPay;\r\n           const ratePay = (Number(curPay)/Number(rowPrice)) - 1\r\n           if( ratePay < -0.02){\r\n             if(state.check.includes(item.code) && checkedItems.has(item.code)){\r\n                orderChance(1, item.code);\r\n             }\r\n           }\r\n           if(row.highPrice !== undefined){\r\n             if(row.highPrice > item.curPay){\r\n               const rateHighPay = (Number(curPay)/Number(row.highPrice)) - 1\r\n               if( rateHighPay < -0.05){\r\n                 if(state.check.includes(item.code) && checkedItems.has(item.code)){\r\n                   orderChance(1, item.code);\r\n                 }\r\n               }\r\n             }else{\r\n               row.highPrice = item.curPay;\r\n               const rowIndex = selList.map(function(d) {return d['code']}).indexOf(row.code);\r\n               selList.splice(rowIndex,1,row);\r\n             }\r\n           }else{\r\n             row.highPrice = item.curPay;\r\n             const rowIndex = selList.map(function(d) {return d['code']}).indexOf(row.code);\r\n             selList.splice(rowIndex,1,row);\r\n           }\r\n\r\n           const checkHandler = ({ target }) => {\r\n             checkedItemHandler(item.code, target.checked);\r\n           };\r\n           let flag = false;\r\n           if(checkedItems.has(item.code)){\r\n             flag = true;\r\n           }\r\n           return(\r\n             <tr key={item.code} className=\"divTableRow\">\r\n               <td className=\"divTableCell cell_1\">\r\n                 <input type=\"checkbox\" checked={flag} onChange={(e) => checkHandler(e)}/>\r\n               </td>\r\n               <td colSpan='2' className=\"divTableCell cell_2\"> {item.code}</td>\r\n               <td className=\"divTableCell cell_1\"> {item.curPay}</td>\r\n               <td className=\"divTableCell cell_1\"> {item.prePay}</td>\r\n               <td className={classNameCheck}> {item.per} %</td>\r\n               <td className={classNameCheck}> {rowPrice} {row.code} / {row.highPrice}</td>\r\n             </tr>\r\n           )\r\n         }else{\r\n           const checkHandler = ({ target }) => {\r\n             checkedItemHandler(item.code, target.checked);\r\n           };\r\n           let flag = false;\r\n           if(checkedItems.has(item.code)){\r\n             flag = true;\r\n           }\r\n           return(\r\n             <tr key={item.code} className=\"divTableRow\">\r\n               <td className=\"divTableCell cell_1\">\r\n                 <input type=\"checkbox\" checked={flag} onChange={(e) => checkHandler(e)}/>\r\n               </td>\r\n               <td colSpan='2' className=\"divTableCell cell_2\"> {item.code}</td>\r\n               <td className=\"divTableCell cell_1\"> {item.curPay}</td>\r\n               <td className=\"divTableCell cell_1\"> {item.prePay}</td>\r\n               <td className={classNameCheck}> {item.per} %</td>\r\n               <td className=\"divTableCell cell_1\"> </td>\r\n             </tr>\r\n           )\r\n         }\r\n        }\r\n     })\r\n   }, [props.list, state.findCode]);\r\n\r\n   async function getList(){\r\n     if(state.publicKey != '' && state.secretKey != ''){\r\n       const payload = {\r\n           access_key: state.publicKey,\r\n           nonce: uuidv4(),\r\n       }\r\n       const token = sign(payload, state.secretKey)\r\n       await axios.get(accountUrl,\r\n           { headers: { 'Content-Type': 'application/json' ,\r\n           'Authorization': 'Bearer '+token} })\r\n           .then(result => {\r\n             let relist = [];\r\n             result.data.map(item => {\r\n                if(!item.currency.includes('KRW')){\r\n                  const con = selList.find(function(element){\r\n                      return element.code.includes(item.currency)\r\n                  })\r\n                  if(con === undefined){\r\n                    relist.push({\r\n                      code : item.currency,\r\n                      price : item.avg_buy_price\r\n                    });\r\n                  }else{\r\n                    relist.push(con);\r\n                  }\r\n                }\r\n              })\r\n              selList = relist;\r\n           })\r\n           .catch(err => {\r\n             alert(err.response.data.error.message);\r\n           });\r\n      }\r\n   }\r\n   async function selCoin(code, balance){\r\n\r\n     const body = {\r\n       market: code,\r\n       side: 'ask',\r\n       volume: balance,\r\n       price: null,\r\n       ord_type: 'market',\r\n       identifier:uuidv4()\r\n     }\r\n     console.log(JSON.stringify(body));\r\n     const query = queryEncode(body)\r\n     const hash = crypto.createHash('sha512')\r\n     const queryHash = hash.update(query, 'utf-8').digest('hex')\r\n     const payload = {\r\n       access_key: state.publicKey,\r\n       nonce: uuidv4(),\r\n       query_hash: queryHash,\r\n       query_hash_alg: 'SHA512',\r\n     }\r\n     const token = sign(payload, state.secretKey)\r\n     await axios.post(orderUrl, JSON.stringify(body),\r\n         { headers: { 'Content-Type': 'application/json' ,\r\n         'Authorization': 'Bearer '+token} },{json: body})\r\n         .then(result => {\r\n             setState(state => ({\r\n                ...state,\r\n                sel : state.sel + code + \":\" + result.data.volume + \" \"\r\n             }))\r\n         })\r\n   }\r\n   async function orderChance(comp, code){\r\n     const body = {\r\n         market: code\r\n     }\r\n     const query = queryEncode(body)\r\n     const hash = crypto.createHash('sha512')\r\n     const queryHash = hash.update(query, 'utf-8').digest('hex')\r\n     const payload = {\r\n       access_key: state.publicKey,\r\n       nonce: uuidv4(),\r\n       query_hash: queryHash,\r\n       query_hash_alg: 'SHA512',\r\n     }\r\n     const token = sign(payload, state.secretKey)\r\n     await axios.get(orderUrl + \"/chance?\" + query,\r\n         { headers: { 'Content-Type': 'application/json' ,\r\n         'Authorization': 'Bearer '+token} })\r\n         .then(result => {\r\n             let balance = 0;\r\n             balance = comp == 0 ? result.data.bid_account.balance : result.data.ask_account.balance;\r\n\r\n             if(comp == 0){\r\n               if(result.data.ask_account.balance > 0){\r\n\r\n               }else{\r\n                 orderCoin(code, balance);\r\n               }\r\n             }else{\r\n                 selCoin(code, balance);\r\n              }\r\n\r\n         })\r\n   }\r\n   async function orderCoin(code, balance){\r\n     let pr = (parseInt(balance) * state.rate) + \"\"\r\n     const body = {\r\n       market: code,\r\n       side: 'bid',\r\n       volume: null,\r\n       price: pr.split('.')[0],\r\n       ord_type: 'price',\r\n       identifier:uuidv4()\r\n     }\r\n     const query = queryEncode(body)\r\n     const hash = crypto.createHash('sha512')\r\n     const queryHash = hash.update(query, 'utf-8').digest('hex')\r\n     const payload = {\r\n       access_key: state.publicKey,\r\n       nonce: uuidv4(),\r\n       query_hash: queryHash,\r\n       query_hash_alg: 'SHA512',\r\n     }\r\n     const token = sign(payload, state.secretKey)\r\n\r\n     if(!state.check.includes(code)){\r\n       await axios.post(orderUrl, JSON.stringify(body),\r\n           { headers: { 'Content-Type': 'application/json' ,\r\n           'Authorization': 'Bearer '+token} },{json: body})\r\n           .then(result => {\r\n               // alert(\"코드 : \" + code + \", 주문 금액 : \" + result.data.price);\r\n               // setTimeout(orderChance(1, code),1000);\r\n               setState(state => ({\r\n                  ...state,\r\n                  check : state.check + code + \":\" + result.data.price + \" \"\r\n               }))\r\n           })\r\n\r\n     }\r\n     getList();\r\n   }\r\n   const publicKeySet = (e) => {\r\n      setState(state => ({\r\n        ...state,\r\n        publicKey: e.target.value\r\n      }))\r\n   }\r\n   const conditionSet = (e) => {\r\n       setState(state => ({\r\n         ...state,\r\n         condition: e.target.value\r\n       }))\r\n    }\r\n    const rateSet = (e) => {\r\n        setState(state => ({\r\n          ...state,\r\n          rate: e.target.value\r\n        }))\r\n     }\r\n   const secretKeySet = (e) => {\r\n      setState(state => ({\r\n        ...state,\r\n        secretKey: e.target.value\r\n      }))\r\n   }\r\n   const mmClick = () => {\r\n     if(!state.mmFlag){\r\n       interval = setInterval(getList, 1000);\r\n     }else{\r\n       clearInterval(interval);\r\n     }\r\n     setState(state => ({\r\n         ...state,\r\n         mmFlag : !state.mmFlag\r\n     }))\r\n   }\r\n   const findCode =(e) => {\r\n     setState(state => ({\r\n         ...state,\r\n         findCode : e.target.value\r\n     }))\r\n   }\r\n    return (\r\n      <table>\r\n        <tr className=\"divTableRow\">\r\n          <td className=\"divTableCell\"></td>\r\n          <td colSpan='3' className=\"divTableCell cell_2\"> public Key : &nbsp;\r\n            <input type=\"text\" disabled={state.mmFlag} style={{\r\n                width:'100px'\r\n            }} onChange={publicKeySet}/> </td>\r\n          <td colSpan='3' className=\"divTableCell cell_1\"> secret Key : &nbsp;\r\n            <input type=\"text\" disabled={state.mmFlag} style={{\r\n                width:'100px'\r\n            }} onChange={secretKeySet}/> </td>\r\n          </tr>\r\n          <tr className=\"divTableRow\">\r\n            <td colSpan='2' className=\"divTableCell cell_2\"> 구매조건 : &nbsp;\r\n              <input  type=\"number\" disabled={state.mmFlag} style={{\r\n                  width:'100px'\r\n              }} onChange={conditionSet} plcaeHolder=\"2\"/> </td>\r\n            <td colSpan='2' className=\"divTableCell cell_1\"> 매수량 : &nbsp;\r\n              <input  type=\"number\" disabled={state.mmFlag} style={{\r\n                  width:'100px'\r\n              }} onChange={rateSet} plcaeHolder=\"최대 0.9\"/></td>\r\n            <td colSpan='3' className=\"divTableCell cell_1\">\r\n              <button onClick={mmClick}>\r\n                자동매매 {state.mmFlag?\"중지\" : \"시작\"}\r\n              </button>\r\n            </td>\r\n          </tr>\r\n          <tr className=\"divTableRow\">\r\n            <td colSpan='7' className=\"divTableCell cell_1\"> {state.check} </td>\r\n          </tr>\r\n          <tr className=\"divTableRow\">\r\n            <td colSpan='7' className=\"divTableCell cell_1\"> {state.sel} </td>\r\n          </tr>\r\n          <tr className=\"divTableRow\">\r\n            <td className=\"divTableCell cell_1\">선택</td>\r\n            <td colspan='2' className=\"divTableCell cell_2\"> 코드\r\n                <input type=\"text\" style={{\r\n                    width:'100px'\r\n                }} onChange={findCode} placeHolder=\"Find Code\"/>\r\n            </td>\r\n            <td className=\"divTableCell cell_1\"> 현재가 </td>\r\n            <td className=\"divTableCell cell_1\"> 5초 이전가 </td>\r\n            <td className=\"divTableCell cell_1\"> 등락률 </td>\r\n            <td className=\"divTableCell cell_1\"> 구매단가</td>\r\n          </tr>\r\n          {rows}\r\n\r\n      </table>\r\n    )\r\n}\r\n\r\n\r\nexport default Check;\r\n","import React, {useState, useEffect} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport axios from 'axios';\nimport Check from './Check';\n\n// const gongsiUrl = \"https://project-team.upbit.com/api/v1/disclosure?region=kr&per_page=\";\nconst appUrl = \"http://chsong.iptime.org:3000/upbit\";\n\nlet preDisId = '';\nlet curDisId = '';\nlet disInfo = {};\nlet balance = '';\nlet inteval = null;\nlet checkInteval = null;\n\nconst App = (props) => {\n  const [state, setState] = useState({\n      gonsi : '',\n      list : [],\n      gongsiState : 'start',\n      checkState: 'start'\n  });\n  async function getCode() {\n      await axios.get(appUrl + '/gonsi',\n          { headers: { 'Content-Type': 'application/json' } })\n          .then(result => {\n              setState(state => ({\n                  ...state,\n                  gonsi : disInfo.code\n              }));\n              disInfo = result.data[0];\n              curDisId = disInfo.id;\n          })\n          .catch(err => {\n            setState(state => ({\n                ...state,\n                gongsiState : 'start'\n            }));\n            alert(err);\n            clearInterval(inteval);\n          });\n      if(preDisId == curDisId){\n          return false;\n      }else {\n              // orderChance(0);\n          if(preDisId != ''){\n            alert(\"공시 정보 :  \" + disInfo.code);\n          }\n          preDisId = curDisId;\n          return true;\n      }\n\n  }\n  async function getCheck(){\n    await axios.get(appUrl + '/list',\n        { headers: { 'Content-Type': 'application/json' } })\n        .then(result => {\n            setState(state => ({\n                ...state,\n                list : result.data\n            }));\n        })\n  }\n  function start(){\n      inteval = setInterval(getCode, 100);\n  }\n  function checkingStart(){\n      checkInteval = setInterval(getCheck, 100);\n  }\n  function gettingStart(){\n    if(state.gongsiState =='stop'){\n      alert(\"공시체크 중지\");\n      setState(state => ({\n          ...state,\n          gongsiState : 'start'\n      }));\n      clearInterval(inteval);\n    }else{\n      alert(\"공시체크 시작\");\n      setState(state => ({\n          ...state,\n          gongsiState : 'stop'\n      }));\n      start();\n    }\n  }\n  function checkStart(){\n    if(state.checkState =='stop'){\n      alert(\"시세체크 중지\");\n      setState(state => ({\n          ...state,\n          checkState : 'start'\n      }));\n      clearInterval(checkInteval);\n    }else{\n      alert(\"시세체크 시작\");\n      setState(state => ({\n          ...state,\n          checkState : 'stop'\n      }));\n      checkingStart();\n    }\n  }\n  return (\n    <div className=\"App\">\n      <div className=\"Gongsi\">\n        <button type=\"button\" onClick={gettingStart}>\n          공시 체크 {state.gongsiState}\n        </button>\n        <button type=\"button\" onClick={checkStart}>\n          시세 체크 {state.checkState}\n        </button>\n      </div>\n\n      <div className=\"divTable\" >\n          <div className=\"divTableRow\">\n            <div className=\"divTableCell cell_2\">현재 공시 :{state.gonsi} </div>\n          </div>\n      </div>\n\n        <Check\n          { ...{\n            ...props,\n            list : state.list\n          }}\n          ></Check>\n    </div>\n  );\n};\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}